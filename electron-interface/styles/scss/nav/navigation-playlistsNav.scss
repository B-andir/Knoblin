@use 'sass:color';
@use '../colors';

#navigation-playlistsNav {
    margin-top: 5px;
    width: 100%;
    height: 99%;


    display: flex;
    flex-direction: column;
    gap: 5px;
}

#navigation-playlistsContainer {
    width: 99%;
    padding-bottom: 4px;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.6rem;

    overflow-y: scroll;
    overflow-x: hidden;

    &::-webkit-scrollbar {
        width: 7px;
    }

    &::-webkit-scrollbar-track {
        background: transparent;
    }

    &::-webkit-scrollbar-thumb {
        background-color: color.adjust(colors.$main, $lightness: 2%);
        border-radius: 4px;
    }

    &::-webkit-scrollbar-thumb:hover {
        background-color: color.adjust(colors.$main, $lightness: 4%);
    }
}

#navigation-playlistsContainer > * {
    position: relative;
}

#navigation-playlistsContainer > *:not(:last-child)::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 80%;
    height: 1px;
    background: linear-gradient(90deg, colors.$main 4%, lighten(colors.$main, 3) 10%, lighten(colors.$main, 2) 90%, colors.$main 96%);
    margin: -0.3rem 0;
    transform: translateX(-50%);
}

.circleIcon {
    width: 0.35rem;
    height: 0.35rem;
    display: block;
    border-radius: 50%;
    background-color: lightgray;
    box-shadow: 0px 2px 2px 1px rgba(0,0,0,0);
    transition: width ease 100ms, height ease 100ms, box-shadow ease 200ms, border-radius ease 100ms;
}

.playlistEntry {
    height: 1.5rem;
    width: 100%;
    display: grid;
    grid-template-areas: "dragHandle icon name actions";
    grid-template-columns: 15px 1.2rem auto 1.2rem;
    grid-template-rows: 1.5rem;
    user-select: none;

    .dragHandleContainer {
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity ease-out 130ms;
        width: min-content;
        margin-left: 6px;
        height: 100%;

        .dragHandle {
            cursor: grab;
            color: lighten(colors.$main, 4);
            height: 100%;
            transform: scale(80%);
        }
        

        &:active {
            opacity: 1;
            cursor: grabbing;
        }
    }

    .playlistIcon {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .playlistName {
        font-size: 1rem;
        font-weight: 300;
        letter-spacing: 0.013rem;
        color: rgba(colors.$secondary, 0.6);
        white-space: nowrap;
        overflow: hidden;
        user-select: none;
        height: 92%;
        padding-left: 0.5rem;
        width: fit-content;
        min-width: max(70%, 80px);
        cursor: pointer;
        display: flex;
        align-self: center;
        align-items: center;
        justify-content: start;
        text-align: center;
        box-shadow: 0px 1px 1px -4px rgba(0,0,0,0);
        transition: color ease-out 100ms, box-shadow ease-in-out 90ms;
    }

    .playlistActions {
        display: flex;
        align-items: center;
        justify-content: center;

        svg {
            color: rgba(colors.$main, 0);
            height: 90%;
            transform: scaleX(1.12) scaleY(0.88);
            box-shadow: 0px 0px 3px 0px rgba(0,0,0,0);
            transition: color ease-out 185ms, box-shadow ease-out 170ms;
        }
    }

    &:hover, &.stay-hovered {
        .dragHandleContainer {
            opacity: 1;
        }

        .playlistIcon .circleIcon {
            cursor: pointer;
            box-shadow: 1px 2px 2px 1px rgba(0,0,0,0.4);
        }

        .playlistName {
            box-shadow: 0px 3px 3px -3px rgba(0,0,0,0.6);
            color: colors.$secondary;
        }

        .playlistActions {
            cursor: pointer;

            svg {
                box-shadow: 0px 0px 7px 1px rgba(0,0,0,0.3) !important;
                color: darken(colors.$secondary, 14);
            }
        }
        
    }

    &.active {
        .playlistName {
            color: colors.$contrast !important;
        }
    }

    &.selected {
        
        box-shadow: -5px 0px 5px -2px rgba(colors.$secondary, 0.6);
        
        .playlistName {
            color: rgba(colors.$contrast, 0.8);
        }

        .playlistActions svg {
            color: colors.$contrast;
            box-shadow: 0px 0px 5px 1px rgba(0,0,0,0.25);
        }
    }
}

.playlistIconPopup {
    background-color: colors.$main;
    border: 1px solid lighten(colors.$main, 10);
    border-radius: 6px;

    display: grid;
    grid-template-columns: repeat(3, 1fr);

    .button {
        width: 2rem;
        height: 2rem;
        margin: .2rem;
        background-color: var(--bg, transparent);
        box-sizing: border-box;
        display: flex;
        border: 1px solid transparent;
        justify-content: center;
        align-items: center;

        svg {
            color: colors.$secondary;
            transform: scale(0.65);
        }

        &:hover {
            box-shadow: 0px 2px 5px 1px rgba(0,0,0,0.2);
            border: 1px solid rgba(255, 255, 255, 0.5)
        }
    }

    .newColorSelection {
        user-select: none;
        --current: attr(data-color color, #fff);
        background-color: var(--current, #fff) !important;

        input[type="color"] {
            position: absolute;
            width: inherit;
            height: inherit;
            border-radius: 50%;
            opacity: 0;
            cursor: pointer;
            border: none;
            padding: 0;
            margin: 0;
        }

        #colorPickerConfirm {
            position: absolute;
            width: inherit;
            height: inherit;
            border-radius: 50%;
            opacity: 0;
            pointer-events: none;

            &.active {
                pointer-events: auto;
            }
        }
    }
}

.playlistActionsPopup {
    background-color: colors.$main;
    border: 1px solid darken(colors.$main, 4);
    border-radius: 6px;
    // padding: 4px;
    width: fit-content;

    display: flex;
    flex-direction: column;
    // gap: 1px;

    .button {
        display: grid;
        height: 1.2rem;
        grid-template-areas: "icon space name";
        grid-template-columns: 1.2rem 0.6rem 1fr;
        
        padding: 5px 6px;

        font-size: 0.9rem;
        font-weight: 300;
        letter-spacing: 0.06em;

        color: darken(colors.$secondary, 20);
        border: 1px solid lighten(colors.$main, 2);
        // border-radius: inherit;

        transition: border ease 60ms, color ease-in 50ms, background-color ease 80ms;

        .icon {
            grid-area: icon;
            
            svg {
                transform: scale(1.2);
            }
        }

        .text {
            grid-area: name;
            justify-self: start;
            align-self: center;
        }

        &:hover {
            color: colors.$secondary;
            cursor: pointer;
            border-color: lighten(colors.$main, 8)
        }

        &#playlistActionDeleteButton {
            background-color: rgba(rgb(255, 38, 38), 0.1);

            &:hover {
                background-color: rgba(rgb(206, 30, 30), 0.3);
            }
        }
    
        &:last-child {
            border-bottom-left-radius: inherit;
            border-bottom-right-radius: inherit;
        }
    
        &:first-child {
            border-top-left-radius: inherit;
            border-top-right-radius: inherit;
        }
    }
}

.confirmDeleteMenu {
    background-color: rgba(colors.$main, 0.6);
    backdrop-filter: blur(2px);
    border: 1px solid rgba(red, 0.6);
    border-radius: 4px;
    padding: 2px;

    #confirmDeleteButton {
        border-radius: inherit;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0;

        &:hover {
            cursor: pointer;
            color: rgba(rgb(255, 103, 103), 1)
        }
    }
}